==============
kodo-visualize
==============

Kodo-visuzalize is a convinient library which contains the tools needed for
making visualizations of the encoding and decoding using kodo.

.. contents:: Table of Contents:
   :local:

Getting Started
===============

First off make sure you have followed the guide for getting started with kodo.

http://kodo-docs.steinwurf.com/en/latest/getting_started.html

When you have completed this, you are ready to install the SDL library on which
the kodo-visual library is based. SDL is a cross-platform multimedia library.
Depending on you system different approaches are needed.

Linux
-----
Use your package manager to install the following (or equivalent) packages::

    sudo aptitude install libsdl2-dev libsdl2-image-dev

You are now ready to configure the project::

    waf configure

Windows
-------
Download SDL2 and SDL2_image - make sure you pick the Development libraries
(and **not** the Runtime ones).
Now unpack the zip files in a folder of your choosing, I picked ``C:\SDL2`` and
``C:\SDL2_image`` respectively.

You are not ready to configure the project by specifying the path to the two
libraries::


    waf configure --sdl2_path=path_to_sdl2 --sdl2_image_path=path_to_sdl2_image


MacOS
-----
Install pkg-config, libsdl2, and libsdl2_image using macports::

    sudo port pkgconfig
    sudo port libsdl2
    sudo port libsdl2_image

Other package managers may or may not work.

After installing the three packages, you should be able to configure the
project::

    waf configure

Usage
=====
Overall, kodo-visualize consists of a canvas and a set of viewers. The canvas is
where all the viewers will print their content.

The kodo library contains many different examples, and it should be fairly
straight forward to integrate kodo-visualize into these.

Encoder State Viewer
--------------------
Shows the most recent symbols generated by the encoder. This is setup by calling
the ``set_callback`` method with the encoder to monitor.

Decoder State Viewer
--------------------
Shows the most recent symbols generated by the encoder. This is setup by calling
the ``set_callback`` method with the decoder to monitor.

Image Viewer
------------
The image viewer is meant to be used in cooperation with the image reader.
Doing so will give a graphical presentation of the decoding.
When using the image viewer, you will get best results if you set the symbol
size to pitch of the image and the number of symbols to the height of the image.
The pitch of the image is the size of a row in the picture in bytes. Both of
these properties are available as members on the image reader.

To show the progress of the decoding, the ``display_decoding`` method should be
called during the decoding process.
